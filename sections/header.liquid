<header
  class="flex flex-col bg-transparent absolute top-0 left-0 right-0 z-50 "
  x-data="
    {
      mobileMenuOpen: false,
      cartDrawerOpen: false,
      activeMegaMenu: null, // Stores the handle of the primary link's collection
      openCartDrawer() {
        this.cartDrawerOpen = true;
      },
      showMegaMenu(collectionHandle) {
        this.activeMegaMenu = collectionHandle;
      },
      hideMegaMenu() {
        this.activeMegaMenu = null;
      }
    }
  "
>
  <div class="w-screen  bg-primary h-8 whitespace-nowrap">
    <div class="ticker-wrap inline-block">
      <span class="ticker-item text-white text-md font-medium tracking-wide"
        >Class Is in Session &bull; Class Is in Session &bull; Class Is in Session &bull; Class Is in Session &bull;
        Class Is in Session &bull; Class Is in Session &bull; Class Is in Session &bull; Class Is in Session &bull;
        Class Is in Session &bull; Class Is in Session &bull;</span
      >
      <!-- Repeat the content to ensure smooth looping -->
      <span class="ticker-item text-white text-md font-medium tracking-wide"
        >Class Is in Session &bull; Class Is in Session &bull; Class Is in Session &bull; Class Is in Session &bull;
        Class Is in Session &bull; Class Is in Session &bull; Class Is in Session &bull; Class Is in Session &bull;
        Class Is in Session &bull; Class Is in Session &bull;</span
      >
    </div>
  </div>
  <nav class="grid grid-cols-3 h-20 px-20 z-50 bg-transparent text-white w-full relative">
    <!-- Desktop Menu -->
    <div class="header__menu hidden xl:flex items-center justify-start gap-6">
      {% for link in section.settings.menu.links %}
        {% assign collection_handle = link.url | remove: '/collections/' | remove: '/' %}
        {% assign collection = collections[collection_handle] %}
        <div
          class=" h-full flex items-center"
          @mouseenter="showMegaMenu('{{ collection_handle }}')"
          @mouseleave="hideMegaMenu()"
        >
          <a
            href="{{ link.url }}"
            class="font-semibold hover:text-gray-300 transition-colors duration-200 py-2 px-4"
            :class="activeMegaMenu === '{{ collection_handle }}' ? 'text-gray-300' : ''"
          >
            {{ link.title }}
          </a>
          <!-- Mega Menu for current link -->
          {% if link.links.size > 0 or collection.metafields.custom.subcollections %}
            <div
              x-cloak
              x-show="activeMegaMenu === '{{ collection_handle }}'"
              x-transition:enter="transition ease-out duration-300"
              x-transition:enter-start="opacity-0 transform -translate-y-2 scale-y-0"
              x-transition:enter-end="opacity-100 transform translate-y-0 scale-y-100"
              class="absolute top-full left-0 w-screen bg-white shadow-2xl z-50 mega-menu origin-top"
            >
              <div class=" mx-12 my-4">
                <div class="grid grid-cols-12 gap-8">
                  <!-- Menu Columns (Secondary and Tertiary Links) -->
                  <div class="col-span-8">
                    <div class="grid grid-cols-3 gap-8">
                      {% comment %} Iterate over the secondary links of the current main link {% endcomment %}

                      {% for sub_link in link.links %}
                        <div class="space-y-4 mega-menu-column">
                          <!-- Column Title (Secondary Level) -->
                          <h3 class="text-sm font-bold text-gray-500 uppercase tracking-wider">
                            <p class="hover:text-gray-700 transition-colors">
                              {{- sub_link.title -}}
                            </p>
                          </h3>
                          <!-- Tertiary Links -->
                          <div class="space-y-2">
                            {% if sub_link.links.size > 0 %}
                              {% for tertiary_link in sub_link.links %}
                                <a
                                  href="{{ tertiary_link.url }}"
                                  class="block text-sm text-gray-700 hover:text-gray-900 transition-colors duration-200 mega-menu-link"
                                >
                                  {{ tertiary_link.title }}
                                </a>
                              {% endfor %}
                            {% else %}
                              {% comment %} Fallback for secondary links without tertiary links {% endcomment %}
                              <a
                                href="{{ sub_link.url }}"
                                class="block text-sm text-gray-700 hover:text-gray-900 transition-colors duration-200 mega-menu-link"
                              >
                                Ver {{ sub_link.title }}
                              </a>
                            {% endif %}
                          </div>
                        </div>
                      {% endfor %}
                    </div>
                  </div>
                  <!-- Collection Cards (Right Side) -->
                  <div class="col-span-4">
                    <div class="grid grid-cols-2 gap-4">
                      {% if collection.metafields.custom.subcollections.value.count > 0 %}
                        {% for subcollection_item in collection.metafields.custom.subcollections.value
                          limit: 2
                        %}
                   
                          {% assign subcollection = collections[subcollection_item.handle] %}
                          {% if subcollection %}
                            <div class="h-48">
                              {% render 'collection-card',
                                collection: subcollection,
                                text_position: 'bottom-left',
                                aspect_ratio: 'portrait'
                              %}
                            </div>
                          {% endif %}
                        {% endfor %}
                      {% else %}
                        {% comment %} Fallback for when no subcollections metafield or it's empty {% endcomment %}
                        <div class="h-48 bg-gray-100 rounded-lg flex items-center justify-center">
                          <span class="text-gray-500 text-sm text-center">Colección Relacionada 1</span>
                        </div>
                        <div class="h-48 bg-gray-100 rounded-lg flex items-center justify-center">
                          <span class="text-gray-500 text-sm text-center">Colección Relacionada 2</span>
                        </div>
                      {% endif %}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          {% endif %}
        </div>
      {% endfor %}
    </div>
    <!-- Mobile Menu Button -->
    <div class="flex gap-6 items-center xl:hidden">
      <button
        @click="mobileMenuOpen = !mobileMenuOpen"
        class="text-white hover:text-gray-300 transition-colors"
        aria-label="Toggle mobile menu"
      >
        {% render 'menu-icon' %}
      </button>
      {% render 'search-icon' %}
    </div>
    <!-- Logo -->
    <h2 class="header__title flex items-center justify-center">
      <a href="{{ routes.root_url }}">
        {% if section.settings.logo != blank %}
          <img
            src="{{ section.settings.logo | image_url: width: 120 }}"
            alt="{{ shop.name }}"
            width="{{ section.settings.logo.width | default: 60 }}"
            height="{{ section.settings.logo.height | default: 40 }}"
            class="invert-100"
            loading="eager"
          >
        {% else %}
          <img src="{{ 'logo.png' | asset_url }}" alt="Logo" class="invert-100" width="60" height="40">
        {% endif %}
      </a>
    </h2>
    <!-- Desktop Icons -->
    <div class="flex items-center justify-end gap-4">
      {% render 'search-icon', class: 'hidden xl:block' %}
      {% render 'heart-icon', class: 'hidden xl:block' %}
      {% render 'user-icon' %}
      {% render 'cart-trigger' %}
    </div>
  </nav>
  <!-- Mobile Menu Overlay -->
  <div
    x-cloak
    x-show="mobileMenuOpen"
    x-transition:enter="transition ease-out duration-500"
    x-transition:enter-start="opacity-0"
    x-transition:enter-end="opacity-100"
    x-transition:leave="transition ease-in duration-400"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0"
    class="fixed inset-0 bg-black/70 z-40 xl:hidden"
    @click="mobileMenuOpen = false"
  ></div>
  <!-- Mobile Menu Panel -->
  <div
    x-cloak
    x-show="mobileMenuOpen"
    x-transition:enter="transform transition ease-out duration-500"
    x-transition:enter-start="transform -translate-x-full"
    x-transition:enter-end="transform translate-x-0"
    x-transition:leave="transform transition ease-in duration-400"
    x-transition:leave-start="transform translate-x-0"
    x-transition:leave-end="transform -translate-x-full"
    class="fixed top-0 left-0 h-full w-4/5 bg-white text-black z-100 xl:hidden overflow-y-auto"
    x-data="mobileMenu()"
  >
    <div class="p-6">
      <!-- Header with Heart Icon and Close Button -->
      <div class="flex justify-between items-center mb-6">
        <div class="flex items-center gap-3">
          <button class="text-gray-600 hover:text-gray-800 transition-colors">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
            </svg>
          </button>
        </div>
        <button
          @click="mobileMenuOpen = false"
          class="text-gray-500 hover:text-gray-700 transition-colors"
          aria-label="Close mobile menu"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <!-- Collection Tabs -->
      {% if section.settings.mobile_menu_collections %}
        <div class="flex gap-6 mb-6 border-b border-gray-200">
          {% for collection_item in section.settings.mobile_menu_collections %}
            {% assign collection = collections[collection_item.handle] %} {# Get collection object by handle #}
            {% if collection %}
              <button
                @click="activeTab = {{ forloop.index0 }}"
                :class="activeTab === {{ forloop.index0 }} ? 'border-b-2 border-black text-black' : 'text-gray-500 hover:text-gray-700'"
                class="pb-2 font-medium transition-colors uppercase tracking-wide"
              >
                {{ collection.title }}
              </button>
            {% endif %}
          {% endfor %}
        </div>
        <!-- Tab Content -->
        {% for collection_item in section.settings.mobile_menu_collections %}
          {% assign collection = collections[collection_item.handle] %} {# Get collection object by handle #}

          {% if collection %}
            <div x-show="activeTab === {{ forloop.index0 }}" class="space-y-3">
              <!-- Subcollections from Metafield -->
              {% if collection.metafields.custom.subcollections %}
                {% assign subcollections = collection.metafields.custom.subcollections.value %}
                {% if subcollections.size > 0 %}
                  <div class="space-y-3">
                    {% for subcollection_handle in subcollections %}
                      {% assign subcollection = collections[subcollection_handle] %}
                      {% if subcollection %}
                        <a
                          href="{{ subcollection.url }}"
                          class="flex items-center justify-between py-3 text-gray-700 hover:text-gray-900 transition-colors border-b border-gray-100"
                          @click="mobileMenuOpen = false"
                        >
                          <p class="text-sm">{{ subcollection.title }}</p>
                          {% if subcollection.image %}
                            {{
                              subcollection.image
                              | image_url: width: 400
                              | image_tag:
                                class: 'aspect-square w-16 h-16 object-cover transition-transform duration-300',
                                alt: subcollection.title,
                                loading: 'lazy'
                            }}
                          {% else %}
                            <div class="w-16 h-16 bg-gray-200 flex items-center justify-center rounded-md">
                              <span class="text-gray-400 text-sm text-center">No image</span>
                            </div>
                          {% endif %}
                        </a>
                      {% endif %}
                    {% endfor %}
                  </div>
                {% endif %}
              {% endif %}
              <!-- Subcollections Carousel -->
              {% if collection.metafields.custom.subcollections %}
                {% assign subcollections_handles = collection.metafields.custom.subcollections.value %}

                {% if subcollections_handles.size > 0 %}
                  <div class="pt-6 pb-4">
                    <div
                      class="subcollections-carousel swiper-subcollections-{{ collection.id }}-{{ forloop.index0 }} overflow-hidden"
                      data-carousel-id="subcollections-{{ collection.id }}-{{ forloop.index0 }}"
                      data-carousel-type="subcollections"
                    >
                      <div class="swiper-wrapper">
                        {% for subcollection_handle in subcollections_handles %}
                          {% assign subcollection = collections[subcollection_handle] %}
                          {% if subcollection %}
                            <div class="swiper-slide">
                              <div class="w-full">
                                {% comment %} Ensure the 'collection-card' snippet expects a 'collection' object directly {% endcomment %}
                                {% render 'collection-card',
                                  collection: subcollection,
                                  text_position: 'bottom-left',
                                  aspect_ratio: 'portrait'
                                %}
                              </div>
                            </div>
                          {% endif %}
                        {% endfor %}
                      </div>
                    </div>
                  </div>
                {% endif %}
              {% endif %}
              <!--
                Additional Menu Items (These would typically come from the actual menu links assigned to the collection)
              -->
              <div class="space-y-3 pt-4 border-t border-gray-200">
                {# Added border-top #}
                <a href="{{ collection.url }}" class="block py-2 text-gray-700 hover:text-gray-900 transition-colors">
                  Ver todo {{ collection.title }}
                </a>
                {# These links assume specific sub-collection handles or manual pages #}
                <a
                  href="{{ collection.url }}/tendencias"
                  class="block py-2 text-gray-700 hover:text-gray-900 transition-colors"
                >
                  Tendencias
                </a>
                <a
                  href="{{ collection.url }}/mas-vendidos"
                  class="block py-2 text-gray-700 hover:text-gray-900 transition-colors"
                >
                  Más Vendidos
                </a>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      {% endif %}
      <!-- Footer Links -->
      <div class="mt-8 pt-6 border-t border-gray-200 space-y-2">
        <a href="/pages/company" class="block text-sm text-gray-600 hover:text-gray-800 transition-colors">
          Compañia
        </a>
        <a href="/pages/brand" class="block text-sm text-gray-600 hover:text-gray-800 transition-colors"> Marca </a>
        <a href="/pages/terms-privacy" class="block text-sm text-gray-600 hover:text-gray-800 transition-colors">
          Términos y privacidad
        </a>
      </div>
    </div>
  </div>
  <!-- Cart Drawer -->
</header>

{% stylesheet %}
  /* Ticker animation */

  .ticker-wrap {

  animation: ticker linear infinite;

  animation-duration: 40s;

  transform: translateX(0%);

  }

  @keyframes ticker {

  0% {

  transform: translateX(0%);

  }

  100% {

  transform: translateX(-50%);

  }

  }

  /* Mobile responsive ticker */

  @media (max-width: 768px) {

  .ticker-wrap {

  animation-duration: 25s;

  }

  }

  /* Hide scrollbar for collection carousel /

  .scrollbar-hide {

  -ms-overflow-style: none; / Internet Explorer 10+ /

  scrollbar-width: none; / Firefox */

  }

  .scrollbar-hide::-webkit-scrollbar {

  display: none; /* Safari and Chrome */

  }

  /* Mobile menu collection carousel styling /

  .mobile-menu-carousel .collection-card {

  min-width: 128px; / w-32 = 8rem = 128px /

  height: 170px; / aspect-[3/4] with w-32 */

  }

  /* Mega Menu Styling /

  .mega-menu {

  backdrop-filter: blur(10px);

  -webkit-backdrop-filter: blur(10px);

  background-color: rgba(255, 255, 255, 0.9);

  / Remove max-height: 0 and overflow: hidden; here directly /

  / Let x-show manage display, opacity and transform will handle transition */

  transition: opacity 0.3s ease-out, transform 0.3s ease-out;

  }

  /* Alpine.js will apply x-show/x-transition classes /

  / These will be handled by x-transition:enter/leave */

  .mega-menu-column {

  position: relative;

  padding-left: 1rem;

  }

  .mega-menu-column::before {

  content: '';

  position: absolute;

  top: 0;

  left: 0;

  width: 1px;

  height: 100%;

  background: linear-gradient(to bottom, transparent, #e5e7eb, transparent);

  }

  .mega-menu-column:first-child::before {

  display: none;

  }

  .mega-menu-link {

  position: relative;

  transition: all 0.2s ease;

  padding-left: 0.5rem;

  }

  .mega-menu-link::before {

  content: '';

  position: absolute;

  left: 0;

  top: 50%;

  transform: translateY(-50%);

  width: 0;

  height: 1px;

  background-color: #374151;

  transition: width 0.2s ease;

  }

  .mega-menu-link:hover::before {

  width: 0.25rem;

  }

  .mega-menu-link:hover {

  padding-left: 0.75rem;

  }

  /* Collection cards in mega menu */

  .mega-menu .collection-card {

  transition: transform 0.3s ease, box-shadow 0.3s ease;

  }

  .mega-menu .collection-card:hover {

  transform: translateY(-2px);

  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);

  }
{% endstylesheet %}

<script>
  // Mobile Menu functionality
  function mobileMenu() {
    return {
      activeTab: 0,
      init() {
        // Initialize subcollections carousels when tab changes
        this.$watch('activeTab', () => {
          this.$nextTick(() => {
            this.initializeSubcollectionsCarousels();
          });
        });

        // Initialize carousels on initial load
        this.$nextTick(() => {
          this.initializeSubcollectionsCarousels();
        });
      },

      initializeSubcollectionsCarousels() {
        const carousels = document.querySelectorAll('[data-carousel-type="subcollections"]');
        carousels.forEach((carousel) => {
          if (carousel.swiper) return; // Already initialized

          if (typeof Swiper !== 'undefined') {
            const swiper = new Swiper(carousel, {
              slidesPerView: 1.5,
              spaceBetween: 12,
              freeMode: {
                enabled: true,
                sticky: true,
                momentum: true,
              },
              grabCursor: false,
              breakpoints: {
                480: {
                  slidesPerView: 2.2,
                  spaceBetween: 16,
                },
                640: {
                  slidesPerView: 3.2,
                  spaceBetween: 20,
                },
              },
            });

            // Store swiper instance
            carousel.swiper = swiper;
          }
        });
      },
    };
  }

  // Cart functionality
  async function updateCartQuantity(itemKey, newQuantity) {
    if (newQuantity < 1) {
      await removeCartItem(itemKey);
      return;
    }

    try {
      const response = await fetch('/cart/change.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          id: itemKey,
          quantity: newQuantity,
        }),
      });

      if (response.ok) {
        // Reload the page to update cart drawer
        window.location.reload();
      }
    } catch (error) {
      console.error('Error updating quantity:', error);
    }
  }

  async function removeCartItem(itemKey) {
    try {
      const response = await fetch('/cart/change.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          id: itemKey,
          quantity: 0,
        }),
      });

      if (response.ok) {
        // Reload the page to update cart drawer
        window.location.reload();
      }
    } catch (error) {
      console.error('Error removing item:', error);
    }
  }

  function toggleWishlist(productId) {
    // Implement wishlist functionality here
    console.log('Toggle wishlist for product:', productId);
  }
</script>

{% schema %}
{
  "name": "t:general.header",

  "settings": [
    {
      "type": "image_picker",

      "id": "logo",

      "label": "Logo",

      "info": "Upload your logo image. If no logo is uploaded, the default logo from assets will be used."
    },

    {
      "type": "link_list",

      "id": "menu",

      "label": "t:labels.menu",

      "info": "Define your main menu. This menu supports up to 3 levels for the mega menu functionality."
    },

    {
      "type": "header",

      "content": "Mobile Menu"
    },

    {
      "type": "collection_list",

      "id": "mobile_menu_collections",

      "label": "Mobile Menu Collections",

      "info": "Select collections to display as tabs in the mobile menu. Each collection will show its subcollections from the 'custom.subcollections' metafield."
    }
  ]
}
{% endschema %}
