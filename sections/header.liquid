<header
  class=" transition-all duration-300  "
  :class="(isScrolled || isHovered) ? 'bg-white ' : 'bg-transparent'"
  x-data="
    {
      mobileMenuOpen: false,
      cartDrawerOpen: false,
      activeMegaMenu: null,
      isScrolled: false,
      isHovered: false,
      init() {
        this.handleScroll();
        window.addEventListener('scroll', this.handleScroll.bind(this));
      },
      handleScroll() {
        // Calculate 100dvh - 35px
        const viewportHeight = window.innerHeight;
        const scrollThreshold = viewportHeight - 35;
        this.isScrolled = window.scrollY > scrollThreshold;
      },
      openCartDrawer() { this.cartDrawerOpen = true; },
      showMegaMenu(collectionHandle) { this.activeMegaMenu = collectionHandle; },
      hideMegaMenu() { this.activeMegaMenu = null; },
      toggleMobileMenu() {
        this.mobileMenuOpen = !this.mobileMenuOpen;
        if (this.mobileMenuOpen) {
          document.body.style.overflow = 'hidden';
          document.body.style.position = 'fixed';
          document.body.style.width = '100%';
          document.body.style.top = `-${window.scrollY}px`;
        } else {
          const scrollY = document.body.style.top;
          document.body.style.overflow = '';
          document.body.style.position = '';
          document.body.style.width = '';
          document.body.style.top = '';
          window.scrollTo(0, parseInt(scrollY || '0') * -1);
        }
      }
    }
  "
  @mouseenter="isHovered = true"
  @mouseleave="isHovered = false"
>
  <nav
    class="grid grid-cols-3 h-15 px-4  lg:pl-9 lg:pr-12   bg-transparent w-full relative"
    :class="(isScrolled || isHovered) ? 'text-black' : 'text-white'"
  >
    <!-- Desktop Menu -->
    <div class="header__menu hidden lg:flex items-center justify-center lg:justify-start ">
      {% for link in section.settings.menu.links %}
        {% assign collection_handle = link.url | remove: '/collections/' | remove: '/' %}
        {% assign collection = collections[collection_handle] %}
        <div
          class="h-full flex items-center"
          @mouseenter="showMegaMenu('{{ collection_handle }}')"
          @mouseleave="hideMegaMenu()"
        >
          <a
            href="{{ link.url }}"
            class="font-semibold transition-colors duration-200 h-full flex items-center px-3"
            :class="(isScrolled || isHovered) ? 'hover:text-gray-600' : 'hover:text-gray-300'"
            :class="activeMegaMenu === '{{ collection_handle }}' ? ((isScrolled || isHovered) ? 'text-gray-600' : 'text-gray-300') : ''"
          >
            {{ link.title }}
          </a>

          {% if link.links.size > 0 %}
            <!-- Mega Menu Panel -->
            <div
              x-cloak
              x-show="activeMegaMenu === '{{ collection_handle }}'"
              x-transition:enter-start="opacity-0 max-h-0 overflow-hidden"
              x-transition:enter-end="opacity-100 max-h-screen overflow-visible"
              :class="
                [
                  'absolute top-full left-0 w-screen bg-white pl-12 py-4  z-50 mega-menu',
                  activeMegaMenu === '{{ collection_handle }}' ? 'is-active' : ''
                ]
              "
              style="
                --anim-base-delay: 40ms;   /* delay before first child */
                --anim-step: 60ms;         /* stagger step between items */
                --anim-duration: 420ms;    /* each child animation duration */
                --anim-distance: 16px;     /* slide distance from left */
              "
              data-anim-container
            >
              <div class="">
                <div class="flex gap-8">
                  <!-- Left: Menu Columns -->
                  <div class="flex w-full">
                    <div class="w-full flex gap-8">
                      {% comment %} Running order counter for global stagger across all items {% endcomment %}
                      {% assign order_counter = 0 %}

                      {% for sub_link in link.links %}
                        {% assign order_counter = order_counter | plus: 1 %}
                        <div
                          class="space-y-4 w-full mega-menu-column"
                          data-anim
                          style="--anim-order: {{ order_counter }};"
                        >
                          <!-- Column Title (not animated separately; remove data-anim above if you want only links) -->

                          <p class="body-sm uppercase text-black/40  ">
                            {{- sub_link.title -}}
                          </p>

                          <!-- Tertiary Links -->
                          <div class="space-y-2">
                            {% if sub_link.links.size > 0 %}
                              {% for tertiary_link in sub_link.links %}
                                {% assign order_counter = order_counter | plus: 1 %}
                                <a
                                  href="{{ tertiary_link.url }}"
                                  class="body font-medium capitalize text-black mega-menu-link"
                                  data-anim
                                  style="--anim-order: {{ order_counter }};"
                                >
                                  {{ tertiary_link.title }}
                                </a>
                              {% endfor %}
                            {% else %}
                              {% comment %} Fallback for secondary links without tertiary links {% endcomment %}
                              {% assign order_counter = order_counter | plus: 1 %}
                              <a
                                href="{{ sub_link.url }}"
                                class="body font-medium capitalize text-black mega-menu-link"
                                data-anim
                                style="--anim-order: {{ order_counter }};"
                              >
                                Ver {{ sub_link.title }}
                              </a>
                            {% endif %}
                          </div>
                        </div>
                      {% endfor %}
                    </div>
                  </div>

                  <!-- Right: Collection Cards -->
                  <div class="flex w-full">
                    <div class="w-full flex  gap-1">
                      {% if collection.metafields.custom.subcollections.value.size > 0 %}
                        {% for subcollection_item_handle in collection.metafields.custom.subcollections.value
                          limit: 2
                        %}
                          {% assign subcollection = collections[subcollection_item_handle] %}
                          {% if subcollection %}
                            {% assign order_counter = order_counter | plus: 1 %}
                            <div class="h-48 w-full" data-anim style="--anim-order: {{ order_counter }};">
                              {% render 'collection-card',
                                collection: subcollection,
                                text_position: 'bottom-left',
                                aspect_ratio: 'portrait'
                              %}
                            </div>
                          {% endif %}
                        {% endfor %}
                      {% else %}
                        {% assign order_counter = order_counter | plus: 1 %}
                        <div
                          class="h-48 w-full bg-gray-100 flex items-center justify-center"
                          data-anim
                          style="--anim-order: {{ order_counter }};"
                        >
                          <span class="text-gray-500 text-sm text-center">Colección Relacionada 1</span>
                        </div>

                        {% assign order_counter = order_counter | plus: 1 %}
                        <div
                          class="h-48 w-full bg-gray-100 rounded-lg flex items-center justify-center"
                          data-anim
                          style="--anim-order: {{ order_counter }};"
                        >
                          <span class="text-gray-500 text-sm text-center">Colección Relacionada 2</span>
                        </div>
                      {% endif %}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          {% endif %}
        </div>
      {% endfor %}
    </div>

    <!-- Mobile Menu Button -->
    <div class="flex gap-6 items-center lg:hidden">
      <button
        @click="toggleMobileMenu()"
        class="transition-colors duration-200"
        :class="(isScrolled || isHovered) ? 'text-black hover:text-gray-600' : 'text-white hover:text-gray-300'"
        aria-label="Toggle mobile menu"
      >
        {% render 'menu-icon' %}
      </button>

      <h2 class="header__title flex items-center justify-center">
        <a href="{{ routes.root_url }}">
          {% if section.settings.logo != blank %}
            <img
              src="{{ section.settings.logo | image_url: width: 120 }}"
              alt="{{ shop.name }}"
              height="{{ section.settings.logo.height | default: 40 }}"
              width="{{ section.settings.logo.width | default: 'auto' }}"
              class="transition-all duration-300"
              :class="(isScrolled || isHovered) ? 'invert-0' : 'invert-100'"
              loading="eager"
            >
          {% else %}
            <img
              src="{{ 'logo.png' | asset_url }}"
              alt="Logo"
              class="transition-all duration-300 h-12"
              :class="(isScrolled || isHovered) ? 'invert-0' : 'invert-100'"
              width="60"
              height="40"
            >
          {% endif %}
        </a>
      </h2>
    </div>

    <!-- Logo -->
    <h2 class="header__title hidden lg:flex items-center justify-center">
      <a href="{{ routes.root_url }}">
        {% if section.settings.logo != blank %}
          <img
            src="{{ section.settings.logo | image_url: width: 120 }}"
            alt="{{ shop.name }}"
            height="{{ section.settings.logo.height | default: 40 }}"
            width="{{ section.settings.logo.width | default: 'auto' }}"
            class="transition-all duration-300"
            :class="(isScrolled || isHovered) ? 'invert-0' : 'invert-100'"
            loading="eager"
          >
        {% else %}
          <img
            src="{{ 'logo.png' | asset_url }}"
            alt="Logo"
            class="transition-all duration-300 h-12"
            :class="(isScrolled || isHovered) ? 'invert-0' : 'invert-100'"
            width="60"
            height="40"
          >
        {% endif %}
      </a>
    </h2>

    <!-- Desktop Icons -->
    <div class="flex items-center col-span-2 lg:col-span-1 justify-end gap-4">
      {% render 'search-icon' %}
      {% render 'heart-icon', class: 'hidden lg:block' %}
      <a
        href="{% if customer %}{{ routes.account_url }}{% else %}{{ routes.account_login_url }}{% endif %}"
        aria-label="Account"
        class="inline-flex"
      >
        {% render 'user-icon', class: 'size-6' %}
      </a>
      {% render 'cart-trigger', class: 'size-6' %}
    </div>
  </nav>

  <!-- Mobile Menu Overlay -->
  <div
    x-cloak
    x-show="mobileMenuOpen"
    x-transition:enter="transition ease-out duration-500"
    x-transition:enter-start="opacity-0"
    x-transition:enter-end="opacity-100"
    x-transition:leave="transition ease-in duration-400"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0"
    class="fixed inset-0 bg-black/70 z-40 lg:hidden"
    @click="toggleMobileMenu()"
  ></div>

  <!-- Mobile Menu Panel -->
  <div
    x-cloak
    x-show="mobileMenuOpen"
    x-transition:enter="transform transition ease-out duration-500"
    x-transition:enter-start="transform -translate-x-full"
    x-transition:enter-end="transform translate-x-0"
    x-transition:leave="transform transition ease-in duration-400"
    x-transition:leave-start="transform translate-x-0"
    x-transition:leave-end="transform -translate-x-full"
    class="fixed top-0 left-0 h-full w-4/5 bg-white text-black z-100 lg:hidden overflow-y-auto"
    x-data="mobileMenu()"
  >
    <div class="p-4" x-show="!showTertiaryView">
      <!-- Header with Heart Icon and Close Button -->
      <div class="flex justify-between items-center mb-6">
        <div class="flex items-center gap-3">
          <button class="text-gray-600 hover:text-gray-800 transition-colors">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
            </svg>
          </button>
        </div>
        <button
          @click="toggleMobileMenu()"
          class="text-gray-500 hover:text-gray-700 transition-colors"
          aria-label="Close mobile menu"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <!-- Mobile Menu Featured Sections Carousel -->
      {% if section.blocks.size > 0 %}
        <div class="mb-6">
          <div
            class="mobile-featured-carousel swiper overflow-hidden"
            data-carousel-id="mobile-featured-{{ section.id }}"
            data-carousel-type="mobile-featured"
          >
            <div class="swiper-wrapper">
              {% for block in section.blocks %}
                {% if block.type == 'mobile_card' %}
                  <div class="swiper-slide" {{ block.shopify_attributes }}>
                    <div class="w-full">
                      {% render 'generic-card',
                        image: block.settings.image,
                        title: block.settings.title,
                        link: block.settings.link,
                        aspect_ratio: block.settings.aspect_ratio,
                        text_position: block.settings.text_position
                      %}
                    </div>
                  </div>
                {% endif %}
              {% endfor %}
            </div>
          </div>
        </div>
      {% endif %}

      {% comment %} Filter primary links to separate links with sublinks from those without {% endcomment %}
      {% assign links_with_sublinks_count = 0 %}
      {% assign links_without_sublinks_count = 0 %}

      {% comment %} First pass: count links with and without sublinks {% endcomment %}
      {% for link in section.settings.menu.links %}
        {% if link.links.size > 0 %}
          {% assign links_with_sublinks_count = links_with_sublinks_count | plus: 1 %}
        {% else %}
          {% assign links_without_sublinks_count = links_without_sublinks_count | plus: 1 %}
        {% endif %}
      {% endfor %}

      {% if links_with_sublinks_count > 0 %}
        <div class="flex gap-4 mb-6 border-b border-gray-200">
          {% assign tab_index = 0 %}
          {% for link in section.settings.menu.links %}
            {% if link.links.size > 0 %}
              <button
                @click="activeTab = {{ tab_index }}"
                :class="activeTab === {{ tab_index }} ? 'border-b-2 border-black text-black' : 'border-b-2 border-transparent text-gray-500 hover:text-gray-700'"
              >
                <h5 class="uppercase my-3 ">
                  {{ link.title }}
                </h5>
              </button>
              {% assign tab_index = tab_index | plus: 1 %}
            {% endif %}
          {% endfor %}
        </div>

        {% assign tab_index = 0 %}
        {% for link in section.settings.menu.links %}
          {% if link.links.size > 0 %}
            <div x-show="activeTab === {{ tab_index }}" class="space-y-3">
              {% comment %} Display secondary links as cards {% endcomment %}
              <div class="space-y-1">
                {% for sub_link in link.links %}
                  {% assign has_sub_links = false %}
                  {% if sub_link.links.size > 0 %}
                    {% assign has_sub_links = true %}
                  {% endif %}
                  {% render 'link-card', link: sub_link, has_sub_links: has_sub_links %}
                {% endfor %}
              </div>
            </div>
            {% assign tab_index = tab_index | plus: 1 %}
          {% endif %}
        {% endfor %}
      {% endif %}

      {% comment %} Subcollections Carousel - Show for collection tabs {% endcomment %}
      {% if links_with_sublinks_count > 0 %}
        {% assign tab_index = 0 %}
        {% for link in section.settings.menu.links %}
          {% if link.links.size > 0 %}
            {% comment %} Check if this link is a collection {% endcomment %}
            {% assign link_handle = link.url | remove: '/collections/' | remove: '/' %}
            {% assign collection = collections[link_handle] %}

            {% if collection and collection.metafields.custom.subcollections.value.count > 0 %}
              <div x-show="activeTab === {{ tab_index }}" class="mb-6 mt-8 -mx-4 z-0">
                <div class="mb-4 mx-4">
                  <p class="body-sm  uppercase text-black/40">Subcollections</p>
                </div>
                <div
                  class="mobile-subcollections-carousel swiper  overflow-hidden"
                  data-carousel-id="mobile-subcollections-{{ section.id }}-{{ tab_index }}"
                  data-carousel-type="mobile-subcollections"
                >
                  <div class="swiper-wrapper ">
                    {% for subcollection_item in collection.metafields.custom.subcollections.value
                      limit: section.settings.mobile_subcollections_count
                    %}
                      {% assign subcollection = collections[subcollection_item.handle] %}
                      {% if subcollection %}
                        <div class="swiper-slide">
                          <div class="w-full">
                            {% render 'collection-card',
                              collection: subcollection,
                              text_position: 'bottom-left',
                              aspect_ratio: 'portrait'
                            %}
                          </div>
                        </div>
                      {% endif %}
                    {% endfor %}
                  </div>
                </div>
              </div>
            {% endif %}
            {% assign tab_index = tab_index | plus: 1 %}
          {% endif %}
        {% endfor %}
      {% endif %}

      <div class="mt-8 pt-6 border-t border-gray-200 space-y-2">
        {% comment %} Add primary links without sublinks {% endcomment %}
        {% for link in section.settings.menu.links %}
          {% unless link.links.size > 0 %}
            <a href="{{ link.url }}" class="block text-sm text-gray-600 hover:text-gray-800 transition-colors">
              {{- link.title -}}
            </a>
          {% endunless %}
        {% endfor %}
      </div>
    </div>

    <!-- Tertiary Links View -->
    <div
      x-show="showTertiaryView"
      x-transition:enter="transform transition ease-out duration-300"
      x-transition:enter-start="transform translate-x-full"
      x-transition:enter-end="transform translate-x-0"
      x-transition:leave="transform transition ease-in duration-300"
      x-transition:leave-start="transform translate-x-0"
      x-transition:leave-end="transform translate-x-full"
      class="absolute inset-0 bg-white p-6 overflow-y-auto"
    >
      <!-- Back Button and Title -->
      <div class="flex items-center gap-3 mb-6">
        <button
          @click="goBackToMainMenu()"
          class="flex items-center gap-2 text-gray-600 hover:text-gray-800 transition-colors"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          <span class="font-medium" x-text="currentTertiaryTitle"></span>
        </button>
      </div>

      <!-- Tertiary Links List -->
      <div class="space-y-3">
        <template x-for="link in currentTertiaryLinks" :key="link.url">
          <a
            :href="link.url"
            class="block text-gray-700 hover:text-gray-900 hover:bg-gray-50 rounded-lg transition-colors border-b border-gray-100 last:border-b-0"
            @click="mobileMenuOpen = false"
          >
            <h5 x-text="link.title"></h5>
          </a>
        </template>
      </div>
    </div>
  </div>
</header>

{% stylesheet %}
  /* Mega Menu Styling */
  .mega-menu {
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    background-color: white;
    transition: max-height 2s ease-out;
    transform-origin: top;
  }

  /* ========== Modular Sweep-in Animation (supports N children) ========== */
  @keyframes sweep-in-left {
    0% {
      opacity: 0;
      transform: translateX(calc(var(--anim-distance, 16px) * -1));
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* Initial hidden state for animatable elements */
  [data-anim] {
    opacity: 0;
    transform: translateX(calc(var(--anim-distance, 16px) * -1));
  }

  /* Activate animation for all children when container is active */
  .is-active [data-anim] {
    animation-name: sweep-in-left;
    animation-duration: var(--anim-duration, 420ms);
    animation-timing-function: ease-out;
    animation-fill-mode: forwards;
    animation-delay: calc(var(--anim-base-delay, 40ms) + var(--anim-step, 60ms) * var(--anim-order, 0));
  }
{% endstylesheet %}

<script>
  // Mobile Menu functionality
  function mobileMenu() {
    return {
      activeTab: 0,
      showTertiaryView: false,
      currentTertiaryTitle: '',
      currentTertiaryLinks: [],

      init() {
        this.$nextTick(() => {
          this.initializeMobileFeaturedCarousel();
          this.initializeMobileSubcollectionsCarousels();
        });
      },

      initializeMobileFeaturedCarousel() {
        const carousel = document.querySelector('[data-carousel-type="mobile-featured"]');
        if (carousel && carousel.swiper) return; // Already initialized

        if (carousel && typeof Swiper !== 'undefined') {
          const swiper = new Swiper(carousel, {
            slidesPerView: 2,
            spaceBetween: 16,
            loop: true,
            navigation: {
              nextEl: carousel.querySelector('.carousel-next'),
              prevEl: carousel.querySelector('.carousel-prev'),
            },
            breakpoints: {
              480: {
                slidesPerView: 2,
                spaceBetween: 20,
              },
              640: {
                slidesPerView: 2,
                spaceBetween: 24,
              },
            },
          });
          carousel.swiper = swiper;
        }
      },

      initializeMobileSubcollectionsCarousels() {
        const carousels = document.querySelectorAll('[data-carousel-type="mobile-subcollections"]');
        carousels.forEach((carousel) => {
          if (carousel && carousel.swiper) return; // Already initialized

          if (carousel && typeof Swiper !== 'undefined') {
            const swiper = new Swiper(carousel, {
              slidesPerView: 2.2,
              spaceBetween: 4,
              loop: false,
            });
            carousel.swiper = swiper;
          }
        });
      },

      goBackToMainMenu() {
        this.showTertiaryView = false;
        this.currentTertiaryTitle = '';
        this.currentTertiaryLinks = [];
      },
    };
  }

  // Cart functionality
  async function updateCartQuantity(itemKey, newQuantity) {
    if (newQuantity < 1) {
      await removeCartItem(itemKey);
      return;
    }
    try {
      const response = await fetch('/cart/change.js', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id: itemKey, quantity: newQuantity }),
      });
      if (response.ok) window.location.reload();
    } catch (error) {
      console.error('Error updating quantity:', error);
    }
  }

  async function removeCartItem(itemKey) {
    try {
      const response = await fetch('/cart/change.js', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id: itemKey, quantity: 0 }),
      });
      if (response.ok) window.location.reload();
    } catch (error) {
      console.error('Error removing item:', error);
    }
  }

  function toggleWishlist(productId) {
    console.log('Toggle wishlist for product:', productId);
  }
</script>

{% schema %}
{
  "name": "t:general.header",
  "max_blocks": 10,
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo",
      "info": "Upload your logo image. If no logo is uploaded, the default logo from assets will be used."
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "t:labels.menu",
      "info": "Define your main menu. This menu supports up to 3 levels for the mega menu functionality."
    },
    { "type": "header", "content": "Mobile Menu" },
    {
      "type": "range",
      "id": "mobile_subcollections_count",
      "min": 2,
      "max": 8,
      "step": 1,
      "label": "Number of Subcollections to Show",
      "default": 4,
      "info": "Number of subcollections to display in the mobile menu carousel for collection tabs"
    }
  ],
  "blocks": [
    {
      "type": "mobile_card",
      "name": "Featured Section",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Card Image",
          "info": "Upload an image for this card. If no image is provided, a placeholder will be shown."
        },
        {
          "type": "text",
          "id": "title",
          "label": "Card Title",
          "default": "Card Title",
          "info": "Enter the title text for this card."
        },
        {
          "type": "url",
          "id": "link",
          "label": "Card Link",
          "info": "Enter the URL this card should link to."
        },
        {
          "type": "select",
          "id": "aspect_ratio",
          "label": "Aspect Ratio",
          "options": [
            {
              "value": "square",
              "label": "Square (1:1)"
            },
            {
              "value": "portrait",
              "label": "Portrait (3:4)"
            },
            {
              "value": "landscape",
              "label": "Landscape (4:3)"
            },
            {
              "value": "wide",
              "label": "Wide (16:9)"
            },
            {
              "value": "ultra-wide",
              "label": "Ultra Wide (21:9)"
            },
            {
              "value": "tall",
              "label": "Tall (2:3)"
            }
          ],
          "default": "portrait",
          "info": "Choose the aspect ratio for this card."
        },
        {
          "type": "select",
          "id": "text_position",
          "label": "Text Position",
          "options": [
            {
              "value": "bottom-left",
              "label": "Bottom Left"
            },
            {
              "value": "bottom-center",
              "label": "Bottom Center"
            },
            {
              "value": "bottom-right",
              "label": "Bottom Right"
            },
            {
              "value": "center",
              "label": "Center"
            }
          ],
          "default": "bottom-left",
          "info": "Choose where the title text should be positioned on the card."
        }
      ]
    }
  ]
}
{% endschema %}
