{% comment %}
  sections/look-fit-grid.liquid
  Section for displaying Look Fit metaobject entries in a grid with filtering
{% endcomment %}

{% comment %} Get collection filter from URL or section settings {% endcomment %}
{% assign url_handle = request.path | split: '/' | last %}

{{ request.path }}

{% comment %} If URL handle is a collection, use it as filter {% endcomment %}
{% if url_handle %}
  {{ url_handle }}
  {% assign collection_by_handle = collections[url_handle] %}
  {% if collection_by_handle.size > 0 %}
    {% assign collection_filter = url_handle %}
    {% assign page_title = collection_by_handle.title %}
  {% endif %}
{% endif %}

<div class="container mx-auto  py-12">
  <h1 class="text-4xl font-extrabold text-gray-900 mb-8">{{ page_title }}</h1>
  <h1>{{ request.path | split: '/' | last }}</h1>
  <h1>{{ collection_by_handle.size }}</h1>

  <div class="mb-8 flex flex-col sm:flex-row gap-4 items-center">
    <!-- Filtro por Colecciones -->
    <div class="w-full sm:w-1/2">
      <label for="collection-filter" class="block text-sm font-medium text-gray-700 mb-1">Filtrar por Colecci√≥n:</label>
      <select
        id="collection-filter"
        class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md shadow-sm"
      >
        <option value="all">Todas las Colecciones</option>
        {% for collection in collections %}
          <option value="{{ collection.handle }}">{{ collection.title }}</option>
        {% endfor %}
      </select>
    </div>

    <!-- Filtro por Tags -->
    <div class="w-full sm:w-1/2">
      <label for="tag-filter" class="block text-sm font-medium text-gray-700 mb-1">Filtrar por Tag:</label>
      <input
        type="text"
        id="tag-filter"
        placeholder="Escribe un tag..."
        class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md shadow-sm"
      >
    </div>
  </div>

  <div id="fits-grid" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
    {% if shop.metaobjects.look_fit.values %}
      {% for look_fit in shop.metaobjects.look_fit.values %}
        {% comment %} Filter by collection if specified {% endcomment %}
        {% assign show_look = true %}
        {% if collection_filter and collection_filter != '' and collection_filter != 'all' %}
          {% assign show_look = false %}
          {% for collection in look_fit.assigned_collections.value %}
            {% if collection.handle == collection_filter %}
              {% assign show_look = true %}
              {% break %}
            {% endif %}
          {% endfor %}
        {% endif %}

        {% if show_look %}
          {%- liquid
            assign assigned_collection_handles = ''
            for collection in look_fit.assigned_collections.value
              assign assigned_collection_handles = assigned_collection_handles | append: collection.handle | append: ','
            endfor
            assign assigned_collection_handles = assigned_collection_handles | rstrip: ','

            assign assigned_tag_values = ''
            for tag in look_fit.assigned_tags.value
              assign assigned_tag_values = assigned_tag_values | append: tag | append: ','
            endfor
            assign assigned_tag_values = assigned_tag_values | rstrip: ','
          -%}

          <div
            class="fit-card bg-white rounded-lg shadow-lg overflow-hidden transition-transform duration-300"
            data-collections="{{ assigned_collection_handles }}"
            data-tags="{{ assigned_tag_values | downcase }}"
            data-fit-title="{{ look_fit.fit_title | downcase }}"
          >
            <a href="{{ routes.root_url }}pages/look-fit/{{ look_fit.handle }}" class="block">
              {% if look_fit.fit_image %}
                <div class="h-80 overflow-hidden">
                  <img
                    src="{{ look_fit.fit_image | image_url: width: 600 }}"
                    alt="{{ look_fit.fit_title }}"
                    width="600"
                    height="800"
                    loading="lazy"
                    class="w-full h-full object-cover"
                  >
                </div>
              {% endif %}

              <div class="p-5 text-center">
                <h3 class="text-xl font-semibold text-gray-800 mb-2">{{ look_fit.fit_title }}</h3>
                <p>{{ look_fit.related_products.value.count }} productos</p>
                {% if look_fit.assigned_collections.value %}
                  <div class="mt-3 text-xs text-gray-500">
                    Colecciones:
                    {% for collection in look_fit.assigned_collections.value %}
                      <span class="inline-block bg-gray-100 rounded-full px-2 py-0.5 text-xs font-semibold text-gray-700 mr-1 mb-1">
                        {{ collection.title }}
                      </span>
                    {% endfor %}
                  </div>
                {% endif %}
                {% if look_fit.assigned_tags.size > 0 %}
                  <div class="mt-1 text-xs text-gray-500">
                    Tags:
                    {% for tag in look_fit.assigned_tags.value %}
                      <span class="inline-block bg-blue-100 rounded-full px-2 py-0.5 text-xs font-semibold text-blue-700 mr-1 mb-1">
                        {{ tag }}
                      </span>
                    {% endfor %}
                  </div>
                {% endif %}
              </div>
            </a>
          </div>
        {% endif %}
      {% endfor %}
    {% else %}
      <p class="col-span-full text-center text-gray-600">No hay looks disponibles en este momento.</p>
    {% endif %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const collectionFilter = document.getElementById('collection-filter');
    const tagFilter = document.getElementById('tag-filter');
    const fitsGrid = document.getElementById('fits-grid');
    const fitCards = fitsGrid.querySelectorAll('.fit-card');

    function applyFilters() {
      const selectedCollection = collectionFilter.value;
      const searchText = tagFilter.value.toLowerCase().trim();

      fitCards.forEach((card) => {
        const cardCollections = card.dataset.collections.split(',');
        const cardTags = card.dataset.tags.split(',');
        const cardTitle = card.dataset.fitTitle;

        let collectionMatch = selectedCollection === 'all' || cardCollections.includes(selectedCollection);
        let tagMatch =
          searchText === '' || cardTags.some((tag) => tag.includes(searchText)) || cardTitle.includes(searchText);

        if (collectionMatch && tagMatch) {
          card.style.display = '';
        } else {
          card.style.display = 'none';
        }
      });
    }

    collectionFilter.addEventListener('change', applyFilters);
    tagFilter.addEventListener('keyup', applyFilters);
    tagFilter.addEventListener('change', applyFilters);
  });
</script>

{% schema %}
{
  "name": "Look Fit Grid",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Get The Look"
    }
  ],
  "presets": [
    {
      "name": "Look Fit Grid"
    }
  ]
}
{% endschema %}
