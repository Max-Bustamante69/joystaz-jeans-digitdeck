{% comment %}
  Look Fit Carousel Snippet - Simple Version
  Usage: {% render 'look-fit-carousel', metaobject: metaobject %}
{% endcomment %}

{% comment %} Count total items for navigation logic {% endcomment %}
{% assign total_items = 0 %}
{% if metaobject.images.value.count > 0 %}
  {% assign total_items = total_items | plus: metaobject.images.value.count %}
{% endif %}
{% if metaobject.videos.value.count > 0 %}
  {% assign total_items = total_items | plus: metaobject.videos.value.count %}
{% endif %}

{% if total_items > 0 %}
  <div class="look-fit-carousel-container  h-full  w-full relative">
    <div class="swiper look-fit-carousel-{{ section.id | default: 'default' }} h-full aspect-[3/4] relative">
      <div class="swiper-wrapper relative h-full">
        {% comment %} Regular images {% endcomment %}
        {% if metaobject.images.value.count > 0 %}
          {% for image_url in metaobject.images.value %}
            <div class="swiper-slide">
              <img
                src="{{ image_url | img_url: '1080x1920', crop: 'center' }}"
                alt="{{ image_url.alt }}"
                class="w-full h-full object-cover"
                loading="lazy"
                width="400"
                height="600"

              >>
            </div>
          {% endfor %}
        {% endif %}

        {% comment %} Regular videos {% endcomment %}
        {% if metaobject.videos.value.count > 0 %}
          {% for video_url in metaobject.videos.value %}
            <div class="swiper-slide">
              <video class="w-full h-full object-cover" muted loop playsinline preload="metadata" autoplay>
                <source src="https:{{ video_url }}" type="video/mp4">
              </video>
            </div>
          {% endfor %}
        {% endif %}
      </div>

      <!-- Mobile Pagination Dots - Same as Product Page -->
      {% if total_items > 1 %}
        <div class="swiper-pagination-mobile w-fit absolute bottom-4 left-4 z-10 lg:hidden"></div>
      {% endif %}

      <!-- Mobile Gallery Plus Button - Same as Product Page -->
      <button
        class="mobile-gallery-expand absolute bottom-4 right-4 flex items-center justify-center z-40 lg:hidden"
        type="button"
        aria-label="Expand gallery"
      >
        <svg class="size-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256">
          <rect width="256" height="256" fill="none"/><polyline points="168 48 208 48 208 88" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"/><polyline points="88 208 48 208 48 168" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"/><polyline points="208 168 208 208 168 208" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"/><polyline points="48 88 48 48 88 48" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"/>
        </svg>
      </button>
    </div>

    <!-- Mobile Gallery Overlay - Same as Product Page -->
    <div
      class="mobile-gallery-overlay fixed inset-0 bg-black z-50 lg:hidden hidden"
    >
      <!-- Close Button -->
      <button
        class="mobile-gallery-close absolute top-4 right-4 w-10 h-10 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center shadow-lg z-10"
        type="button"
        aria-label="Close gallery"
      >
        <svg class="w-6 h-6 text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
        </svg>
      </button>

      <!-- Gallery Images Container -->
      <div class="h-full overflow-y-auto">
        <div class="mobile-gallery-content">
          <!-- Images will be populated by JavaScript -->
        </div>
      </div>
    </div>

    {% comment %} Navigation arrows - only for desktop {% endcomment %}
    {% if total_items > 1 %}
      <div class="absolute inset-0 pointer-events-none group-hover:block hidden lg:block">
        <button
          class="carousel-arrow carousel-prev absolute p-2 left-2 top-1/2 -translate-y-1/2 w-10 h-10 lg:opacity-0 group-hover:opacity-100 transition-all duration-300 z-50 pointer-events-auto cursor-pointer"
          aria-label="Previous"
        >
          <svg
            class="w-5 h-5 text-black drop-shadow-md"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            stroke-width="2.5"
          >
            <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7"/>
          </svg>
        </button>
        <button
          class="carousel-arrow carousel-next absolute p-2 right-2 top-1/2 -translate-y-1/2 w-10 h-10 lg:opacity-0 group-hover:opacity-100 transition-all duration-300 z-50 pointer-events-auto cursor-pointer"
          aria-label="Next"
        >
          <svg
            class="w-5 h-5 text-black drop-shadow-md"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            stroke-width="2.5"
          >
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7"/>
          </svg>
        </button>
      </div>
    {% endif %}
  </div>

  <style>
    /* Mobile Product Gallery Pagination Styles - Same as Product Page */
    .swiper-pagination-mobile {
      width: fit-content;
      bottom: 20px !important;
      left: 20px !important;
      display: flex;
      gap: 6px;
      align-items: center;
    }

    .swiper-pagination-bullet {
      background: rgba(0, 0, 0, 0.2) !important;
      opacity: 1 !important;
      margin: 0px !important;
      transition: all 0.6s ease;
      width: 5px !important;
      height: 5px !important;
    }

    .swiper-pagination-bullet.swiper-pagination-bullet-active {
      background: rgba(0, 0, 0, 1) !important;
      width: 16px !important;
      height: 5px !important;
      border-radius: 6px !important;
      transition: all 0.6s ease;
    }

    .swiper {
      width: 100%;
      margin-left: 0;
      margin-right: 0;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const carousel = document.querySelector('.look-fit-carousel-{{ section.id | default: 'default' }}');
      if (carousel && typeof Swiper !== 'undefined') {
        const paginationEl = carousel.querySelector('.swiper-pagination-mobile');
        const carouselContainer = carousel.closest('.look-fit-carousel-container');

        // Debug logging
        console.log('Look-fit carousel found:', carousel);
        console.log('Pagination element found:', paginationEl);
        console.log('Carousel container found:', carouselContainer);

        const swiperInstance = new Swiper(carousel, {
          slidesPerView: 1,
          spaceBetween: 0,
          allowTouchMove: true,
          grabCursor: false,
          navigation: false, // Disabled for mobile, only desktop has arrows
          pagination: paginationEl ? {
            el: paginationEl,
            clickable: true,
            dynamicBullets: false,
          } : false,

          // Use events to properly handle pagination state changes
          on: {
            init: function () {
              console.log('Swiper initialized');
              console.log('Pagination object:', this.pagination);
              console.log('Active index:', this.activeIndex);
              updatePaginationBullets(this);
            },
            slideChange: function () {
              console.log('Slide changed to:', this.activeIndex);
              console.log('Pagination bullets:', this.pagination ? this.pagination.bullets : 'No pagination');
              updatePaginationBullets(this);
            },
            slideChangeTransitionEnd: function () {
              updatePaginationBullets(this);
            }
          }
        });


        // Function to manually update pagination bullets active state
        function updatePaginationBullets(swiper) {
          if (!paginationEl || !swiper.pagination || !swiper.pagination.bullets) {
            console.log('No pagination or bullets found');
            return;
          }

          const bullets = paginationEl.querySelectorAll('.swiper-pagination-bullet');
          const activeIndex = swiper.activeIndex;
          
          console.log('Updating bullets. Active index:', activeIndex, 'Total bullets:', bullets.length);

          // Remove active class from all bullets
          bullets.forEach((bullet, index) => {
            bullet.classList.remove('swiper-pagination-bullet-active');
            console.log(`Bullet ${index} active class removed`);
          });

          // Add active class to current bullet
          if (bullets[activeIndex]) {
            bullets[activeIndex].classList.add('swiper-pagination-bullet-active');
            console.log(`Bullet ${activeIndex} set as active`);
          }
        }


        // Mobile Gallery Overlay Functionality - Same as Product Page
        const expandButton = carouselContainer ? carouselContainer.querySelector('.mobile-gallery-expand') : null;
        const overlay = carouselContainer ? carouselContainer.querySelector('.mobile-gallery-overlay') : null;
        const closeButton = carouselContainer ? carouselContainer.querySelector('.mobile-gallery-close') : null;
        const galleryContent = carouselContainer ? carouselContainer.querySelector('.mobile-gallery-content') : null;

        // Function to populate gallery content
        function populateGalleryContent() {
          if (!galleryContent) return;
          
          let content = '';
          
          // Add images
          {% if metaobject.images.value.count > 0 %}
            {% for image_url in metaobject.images.value %}
              content += `
                <div class="w-full">
                  <img
                    src="{{ image_url | img_url: '800x1200' }}"
                    alt="{{ image_url.alt }}"
                    class="w-full h-auto object-cover"
                    width="400"
                    height="600"
                    loading="lazy"
                  >
                </div>
              `;
            {% endfor %}
          {% endif %}

          // Add videos
          {% if metaobject.videos.value.count > 0 %}
            {% for video_url in metaobject.videos.value %}
              content += `
                <div class="w-full">
                  <video class="w-full h-auto object-cover" controls muted playsinline preload="metadata">
                    <source src="https:{{ video_url }}" type="video/mp4">
                  </video>
                </div>
              `;
            {% endfor %}
          {% endif %}

          galleryContent.innerHTML = content;
        }

        // Function to open mobile gallery
        function openMobileGallery() {
          if (overlay) {
            populateGalleryContent();
            overlay.classList.remove('hidden');
            document.body.style.overflow = 'hidden';
          }
        }

        // Function to close mobile gallery
        function closeMobileGallery() {
          if (overlay) {
            overlay.classList.add('hidden');
            document.body.style.overflow = '';
          }
        }

        // Add event listeners
        if (expandButton) {
          expandButton.addEventListener('click', openMobileGallery);
          expandButton.addEventListener('touchstart', (e) => {
            e.preventDefault();
            openMobileGallery();
          });
        }

        if (closeButton) {
          closeButton.addEventListener('click', closeMobileGallery);
          closeButton.addEventListener('touchstart', (e) => {
            e.preventDefault();
            closeMobileGallery();
          });
        }

        // Close on overlay click (outside content)
        if (overlay) {
          overlay.addEventListener('click', (e) => {
            if (e.target === overlay) {
              closeMobileGallery();
            }
          });
        }
      }
    });
  </script>
{% else %}
  <div class="aspect-[3/4] lg:aspect-[4/5] bg-gray-200 flex items-center justify-center">
    <span class="text-gray-400 text-lg">No media available</span>
  </div>
{% endif %}
